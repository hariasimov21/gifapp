{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifterApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GifterApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6KAuCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEAC,mBAAS,IAFT,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACG,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAGlB,sBAAKgB,UAAU,+CAAf,UACC,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHAS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBACtB,CACIqB,KAAM,GACNe,SAAS,IALqB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmCtC,OAzBAC,qBAAU,WAGNC,YAAW,WACP3B,EAAQC,GACH2B,MAAM,SAAAC,GACHJ,EAAS,CACLjB,KAAMqB,EACNN,SAAS,SAItB,OAEJ,CAACtB,IAWGuB,ED9BqBM,CAAa7B,GAAjCa,EAH2B,EAGhCN,KAAce,EAHkB,EAGlBA,QAGjB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDlB,IAEtDsB,EAAU,mBAAGJ,UAAU,mCAAb,2BAAoE,KAElF,qBAAKA,UAAU,YAAf,SAGWL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADEA,EAAIC,aEWpBmB,EA7BG,WAAO,IAAD,EACe5C,mBAAS,CAAC,UADzB,mBACd6C,EADc,KACF9C,EADE,KAWpB,OACI,qCACC,iDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BACI8C,EAAWtB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADHA,YClBjBgC,G,MAAUC,SAASC,cAAT,UAEhBC,IAASC,OAAO,cAAC,EAAD,IAAcJ,K","file":"static/js/main.2da361d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] =  useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cat => [inputValue, ...cat]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n           <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange }\n           />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\n\n\nexport default AddCategory\n","\n\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=JXGBt7yWLGo0ttZkDnbpkTWTkuZydyE6`;\n    const resp = await fetch(url);\n    const {data} =  await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n    \n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    console.log({id,title,url});\n\n    return (\n        <div className=\"card animate__animated animate__bounceInLeft\">\n         <img src={url} alt={title}/>\n         <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n import { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n\nconst {data:images,  loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n\n            {loading ? <p className=\"animate__animated animate__pulse\">Loading... :)</p> : null}\n\n         <div className=\"card-grid\"> \n            \n                {\n                    images.map( img => (\n                        <GifGridItem \n                        key = {img.id}\n                         {...img}\n                         />\n    ))\n                }\n        \n        </div> \n\n        </> \n    );\n            }\n  ","import { useEffect, useState } from \"react\";\nimport {getGifs} from '../helpers/getGifs'\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState(\n        {\n            data: [],\n            loading: true\n        }\n\n    );\n\n    useEffect(() => {\n        \n\n        setTimeout(() => {\n            getGifs(category)\n                .then( imgs => {\n                    setstate({\n                        data: imgs,\n                        loading: false\n            });\n        })\n\n        }, 3000);\n        \n    }, [category])\n\n   /*  setTimeout(() => {\n        setstate({\n            data: [1,2,3,4],\n            loading: false\n        })\n    }, 3000); */\n\n\n\n    return state;\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifterApp = () => {\n   const [categories, setCategories] = useState(['anime'])\n   \n   \n   //const categories = ['anime','deportes', 'videojuegos'];\n\n/*     const handleAdd = () => {\n        const newCategorie = prompt('Ingrese nueva categoria');\n        setcategories(categories.concat(newCategorie))\n    } */\n\n    return (\n        <>\n         <h2>GifterExpertApp</h2>  \n         <AddCategory setCategories = {setCategories} /> \n         <hr />\n         <ol>\n           { categories.map(category => (\n              <GifGrid\n                key = {category}\n                category={category} />\n           ))}\n         </ol>\n        </>\n    )\n    }\n//\n//https://hackernoon.com/structuring-projects-and-naming-components-in-react-1261b6e18d76\n\nexport default GifterApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifterApp from './GifterApp';\nimport './index.css';\n\n\nconst divRoot = document.querySelector(`#root`)\n\nReactDOM.render(<GifterApp />,divRoot );\n\n"],"sourceRoot":""}